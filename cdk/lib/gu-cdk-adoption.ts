// This file was autogenerated using @guardian/cdk-cli

import {Schedule} from "@aws-cdk/aws-events";
import {PolicyStatement} from "@aws-cdk/aws-iam";
import {Runtime} from "@aws-cdk/aws-lambda";
import type {App} from "@aws-cdk/core";
import {Duration} from "@aws-cdk/core";
import {GuScheduledLambda} from "@guardian/cdk";
import type {GuStackProps} from "@guardian/cdk/lib/constructs/core";
import {GuDistributionBucketParameter, GuStack, GuStringParameter,} from "@guardian/cdk/lib/constructs/core";
import {GuVpc} from "@guardian/cdk/lib/constructs/ec2";
import {TreatMissingData} from "@aws-cdk/aws-cloudwatch";

export class GuCdkAdoption extends GuStack {
  constructor(scope: App, id: string, props: GuStackProps) {
    super(scope, id, props);

    const bucketName = new GuDistributionBucketParameter(this, "dist-bucket");
    const apiToken = new GuStringParameter(this, "api-token", {
      description: "GitHub API token with repo permissions",
      fromSSM: true,
    });
    const prismUrl = new GuStringParameter(this, "prism-url", {
      fromSSM: true,
    });

    const lambda = new GuScheduledLambda(this, "scheduled-lambda", {
      code: {
        bucket: bucketName.valueAsString,
        key: `${this.stack}/${this.stage}/${this.app}/${this.app}.zip`,
      },
      environment: {
        API_TOKEN: apiToken.valueAsString,
        PRISM_URL: prismUrl.valueAsString
      },
      functionName: `${this.app}-${this.stage}`,
      monitoringConfiguration: {
        toleratedErrorPercentage: 50,
        numberOfFiveMinutePeriodsToEvaluate: 3,
        treatMissingData: TreatMissingData.NOT_BREACHING, //TODO fix this at construct level
        snsTopicName: "devx-alerts",
      },
      schedule: Schedule.rate(Duration.days(1)),
      runtime: Runtime.NODEJS_14_X,
      handler: "lib/handler.handler",
      vpc: GuVpc.fromIdParameter(this, "vpc"),
      vpcSubnets: { subnets: GuVpc.subnetsfromParameter(this) },
    });

    lambda.addToRolePolicy(
      new PolicyStatement({
        actions: ["cloudwatch:PutMetricData"],
        resources: ["*"],
      })
    );
  }
}
